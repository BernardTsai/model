>> {{context}}/{{version}}.yaml
---
model:
  type:        Model
  context:     {{context}}
  version:     {{version}}
  consistent:  {{consistent}}
  # ----------------------------------------------------------------------------
{% if (networks is defined) and networks %}
  networks:
{% else %}
  networks: []
{% endif %}
{% for network in networks %}
  - uuid:    {{network.uuid}}
    type:    ExternalNetwork
    name:    {{network.name}}
    version: {{network.version}}
    state:   {{network.state}}
    target:  {{network.target}}
    description: |
      {{network.description}}
{% if (network.ipv4 is defined) %}
    ipv4:
        cidr:      {{network.ipv4.cidr}}
        network:   {{network.ipv4.network}}
        length:    {{network.ipv4.length}}
        gateway:   {{network.ipv4.gateway}}
        dns:       {{network.ipv4.dns}}
        dhcp:      {{network.ipv4.dhcp}}
        start:     {{network.ipv4.start}}
        end:       {{network.ipv4.end}}
        broadcast: {{network.ipv4.broadcast}}
{% endif %}
{% if network.ipv6 is defined %}
    ipv6:
        cidr:      "{{network.ipv6.cidr}}"
        network:   "{{network.ipv6.network}}"
        length:    {{network.ipv6.length}}
        gateway:   "{{network.ipv6.gateway}}"
        dns:       "{{network.ipv6.dns}}"
        dhcp:      "{{network.ipv6.dhcp}}"
        start:     "{{network.ipv6.start}}"
        end:       "{{network.ipv6.end}}"
        broadcast: "{{network.ipv6.broadcast}}"
{% endif %}
{% endfor %}{# networks #}
  # ----------------------------------------------------------------------------
{% if (components is defined) and components %}
  components:
{% else %}
  components: []
{% endif %}
{% for component in components %}
  - uuid:         {{component.uuid}}
    type:         ExternalComponent
    name:         {{component.name}}
    version:      {{component.version}}
    state:        {{component.state}}
    network:      {{component.network}}
    description: |
      {{component.description}}
{% if (component.ipv4 is defined) and component.ipv4 %}
    ipv4:
{% else %}
    ipv4:         []
{% endif %}
{% for ipv4 in component.ipv4 %}
    - {{ipv4}}
{% endfor %}{# ipv4 #}
{% if (component.ipv6 is defined) and component.ipv6 %}
    ipv6:
{% else %}
    ipv6:         []
{% endif %}
{% for ipv6 in component.ipv6 %}
    - {{ipv6}}
{% endfor %}{# ipv6 #}
{% if (component.requirements is defined) and component.requirements %}
    requirements:
{% else %}
    requirements: []
{% endif %}
{% for requirement in component.requirements %}
    - component:  {{requirement.component}}
      capability: {{requirement.capability}}
{% endfor %}{#requirements #}
{% if (component.capabilities is defined) and component.capabilities %}
    capabilities:
{% else %}
    capabilities: []
{% endif %}
{% for capability in component.capabilities %}
    - name: {{capability.name}}
      endpoints:
{% for endpoint in capability.endpoints %}
      - protocol: {{endpoint.protocol}}
        port_min: {{endpoint.port_min}}
        port_max: {{endpoint.port_max}}
{% endfor %}{# endpoints #}
{% endfor %}{# capabilities #}
{% endfor %}{# components #}
  # ----------------------------------------------------------------------------
{% if (vnfs is defined) and vnfs %}
  vnfs:
{% else %}
  vnfs: []
{% endif %}
{% for vnf in vnfs %}
  - uuid:    {{vnf.uuid}}
    type:    VNF
    name:    {{vnf.name}}
    version: {{vnf.version}}
    state:   {{vnf.state}}
    vendor:  {{vnf.vendor}}
    description: |
      {{vnf.description}}
{% if (vnf.tenants is defined) and vnf.tenants %}
    # --------------------------------------------------------------------------
    tenants:
{% else %}
    tenants: []
{% endif %}
{% for tenant in vnf.tenants %}
    - uuid:       {{tenant.uuid}}
      type:       Tenant
      name:       {{tenant.name}}
      version:    {{tenant.version}}
      state:      {{tenant.state}}
      vnf:        {{tenant.vnf}}
      datacenter: {{tenant.datacenter}}
      description: |
        {{tenant.description}}
        # ------------------------------------------------------------------------
{% if (tenant.networks is defined) and tenant.networks %}
      networks:
{% else %}
      networks: []
{% endif %}
{% for network in tenant.networks %}
      - uuid:    {{network.uuid}}
        type:    InternalNetwork
        name:    {{network.name}}
        version: {{network.version}}
        state:   {{network.state}}
        vnf:     {{network.vnf}}
        tenant:  {{network.tenant}}
        description: |
          {{network.description}}
{% if network.ipv4 is defined %}
        ipv4:
            cidr:      {{network.ipv4.cidr}}
            network:   {{network.ipv4.network}}
            length:    {{network.ipv4.length}}
            gateway:   {{network.ipv4.gateway}}
            dns:       {{network.ipv4.dns}}
            dhcp:      {{network.ipv4.dhcp}}
            start:     {{network.ipv4.start}}
            end:       {{network.ipv4.end}}
            broadcast: {{network.ipv4.broadcast}}
{% endif %}
{% if network.ipv6 is defined %}
        ipv6:
            cidr:      "{{network.ipv6.cidr}}"
            network:   "{{network.ipv6.network}}"
            length:    {{network.ipv6.length}}
            gateway:   "{{network.ipv6.gateway}}"
            dns:       "{{network.ipv6.dns}}"
            dhcp:      "{{network.ipv6.dhcp}}"
            start:     "{{network.ipv6.start}}"
            end:       "{{network.ipv6.end}}"
            broadcast: "{{network.ipv6.broadcast}}"
{% endif %}
{% endfor %}{# networks #}
      # ------------------------------------------------------------------------
{% if (tenant.components is defined) and tenant.components %}
      components:
{% else %}
      components: []
{% endif %}
{% for component in tenant.components %}
      - uuid:         {{component.uuid}}
        type:         InternalComponent
        name:         {{component.name}}
        version:      {{component.version}}
        state:        {{component.state}}
        vnf:          {{component.vnf}}
        tenant:       {{component.tenant}}
        placement:    {{component.placement}}
        flavor:       {{component.flavor}}
        image:        {{component.image}}
        minimum_size: {{component.minimum_size}}
        maximum_size: {{component.maximum_size}}
        default_size: {{component.default_size}}
        description: |
          {{component.description}}
{% if (component.user_data is defined) and component.user_data %}
        user_data:
{% else %}
        user_data:    []
{% endif %}
{% for user_data in component.user_data %}
        - {{user_data}}
{% endfor %}{# user_data #}
{% if (component.metadata is defined) and component.metadata %}
        metadata:
{% else %}
        metadata:    []
{% endif %}
{% for metadata in component.metadata %}
        - {{metadata}}
{% endfor %}{# metadata #}
{% if (component.volumes is defined) and component.volumes %}
        volumes:
{% else %}
        volumes: []
{% endif %}
{% for volume in component.volumes %}
        - device: {{volume.device}}
          size:   {{volume.size}}
          type:   {{volume.type}}
          mount:  {{volume.mount}}
{% endfor %}{# volumes #}
{% if (component.interfaces is defined) and component.interfaces %}
        interfaces:
{% else %}
        interfaces: []
{% endif %}
{% for interface in component.interfaces %}
        - network: {{interface.network}}
{% if interface.type is defined %}
          type:    {{interface.type}}
{% endif %}
{% if (interface.ipv4_fixed is defined) and interface.ipv4_fixed %}
          ipv4_fixed:
{% else %}
          ipv4_fixed:   []
{% endif %}
{% for ipv4_fixed in interface.ipv4_fixed %}
          - {{ipv4_fixed}}
{% endfor %}{# ipv4_fixed #}
{% if (interface.ipv4_allowed is defined) and interface.ipv4_allowed %}
          ipv4_allowed:
{% else %}
          ipv4_allowed: []
{% endif %}
{% for ipv4_allowed in interface.ipv4_allowed %}
          - {{ipv4_allowed}}
{% endfor %}{# ipv4_allowed #}
{% if (interface.ipv6_fixed is defined) and interface.ipv6_fixed %}
          ipv6_fixed:
{% else %}
          ipv6_fixed:   []
{% endif %}
{% for ipv6_fixed in interface.ipv6_fixed %}
          - {{ipv6_fixed}}
{% endfor %}{# ipv6_fixed #}
{% if (interface.ipv6_allowed is defined) and interface.ipv6_allowed %}
          ipv6_allowed:
{% else %}
          ipv6_allowed: []
{% endif %}
{% for ipv6_allowed in interface.ipv6_allowed %}
          - {{ipv6_allowed}}
{% endfor %}{# ipv6_allowed #}
{% if (interface.rules is defined) and interface.rules %}
          rules:
{% else %}
          rules: []
{% endif %}
{% for rule in interface.rules %}
          - direction: {{rule.direction}}
            mode:      {{rule.mode}}
            group:     {{rule.group}}
            protocol:  {{rule.protocol}}
            port_min:  {{rule.port_min}}
            port_max:  {{rule.port_max}}
            family:    {{rule.family}}
            prefix:    {{rule.prefix}}
{% endfor %}{# rules #}
{% endfor %}{# interfaces #}
{% if (component.requirements is defined) and component.requirements %}
        requirements:
{% else %}
        requirements: []
{% endif %}
{% for requirement in component.requirements %}
        - component:  {{requirement.component}}
          capability: {{requirement.capability}}
{% endfor %}{# requirements #}
{% if (component.capabilities is defined) and component.capabilities %}
        capabilities:
{% else %}
        capabilities: []
{% endif %}
{% for capability in component.capabilities %}
        - name: {{capability.name}}
          endpoints:
{% for endpoint in capability.endpoints %}
          - protocol: {{endpoint.protocol}}
            port_min: {{endpoint.port_min}}
            port_max: {{endpoint.port_max}}
{% endfor %}{# endpoints #}
{% endfor %}{# capabilities #}
        # ----------------------------------------------------------------------
{% if (component.nodes is defined) and component.nodes %}
        nodes:
{% else %}
        nodes: []
{% endif %}
{% for node in component.nodes %}
        - uuid:         {{node.uuid}}
          type:         Node
          name:         {{node.name}}
          version:      {{node.version}}
          state:        {{node.state}}
          vnf:          {{node.vnf}}
          tenant:       {{node.tenant}}
          placement:    {{node.placement}}
          flavor:       {{node.flavor}}
          image:        {{node.image}}
          description: |
            {{component.description}}
{% if (node.user_data is defined) and node.user_data %}
          user_data:
{% else %}
          user_data:    []
{% endif %}
{% for user_data in node.user_data %}
          - {{user_data}}
{% endfor %}{# user_data #}
{% if (node.metadata is defined) and node.metadata %}
          metadata:
{% else %}
          metadata:    []
{% endif %}
{% for metadata in node.metadata %}
          - {{metadata}}
{% endfor %}{# metadata #}
{% if (node.volumes is defined) and node.volumes %}
          volumes:
{% else %}
          volumes: []
{% endif %}
{% for volume in node.volumes %}
          - device: {{volume.device}}
            size:   {{volume.size}}
            type:   {{volume.type}}
            mount:  {{volume.mount}}
{% endfor %}{# volumes #}
{% if (node.interfaces is defined) and node.interfaces %}
          interfaces:
{% else %}
          interfaces: []
{% endif %}
{% for interface in node.interfaces %}
          - network: {{interface.network}}
{% if interface.type is defined %}
            type:    {{interface.type}}
{% endif %}
{% if (interface.ipv4_fixed is defined) and interface.ipv4_fixed %}
            ipv4_fixed:
{% else %}
            ipv4_fixed:   []
{% endif %}
{% for ipv4_fixed in interface.ipv4_fixed %}
            - {{ipv4_fixed}}
{% endfor %}{# ipv4_fixed #}
{% if (interface.ipv4_allowed is defined) and interface.ipv4_allowed %}
            ipv4_allowed:
{% else %}
            ipv4_allowed: []
{% endif %}
{% for ipv4_allowed in interface.ipv4_allowed %}
            - {{ipv4_allowed}}
{% endfor %}{# ipv4_allowed #}
{% if (interface.ipv6_fixed is defined) and interface.ipv6_fixed %}
            ipv6_fixed:
{% else %}
            ipv6_fixed:   []
{% endif %}
{% for ipv6_fixed in interface.ipv6_fixed %}
            - {{ipv6_fixed}}
{% endfor %}{# ipv6_fixed #}
{% if (interface.ipv6_allowed is defined) and interface.ipv6_allowed %}
            ipv6_allowed:
{% else %}
            ipv6_allowed: []
{% endif %}
{% for ipv6_allowed in interface.ipv6_allowed %}
            - {{ipv6_allowed}}
{% endfor %}{# ipv6_allowed #}
{% if (interface.rules is defined) and interface.rules %}
            rules:
{% else %}
            rules: []
{% endif %}
{% for rule in interface.rules %}
            - direction: {{rule.direction}}
              mode:      {{rule.mode}}
              group:     {{rule.group}}
              protocol:  {{rule.protocol}}
              port_min:  {{rule.port_min}}
              port_max:  {{rule.port_max}}
              family:    {{rule.family}}
              prefix:    {{rule.prefix}}
{% endfor %}{# rules #}
{% endfor %}{# interfaces #}
{% if (node.requirements is defined) and node.requirements %}
          requirements:
{% else %}
          requirements: []
{% endif %}
{% for requirement in node.requirements %}
          - component:  {{requirement.component}}
            capability: {{requirement.capability}}
{% endfor %}{# requirements #}
{% if (node.capabilities is defined) and node.capabilities %}
          capabilities:
{% else %}
          capabilities: []
{% endif %}
{% for capability in node.capabilities %}
          - name: {{capability.name}}
            endpoints:
{% for endpoint in capability.endpoints %}
            - protocol: {{endpoint.protocol}}
              port_min: {{endpoint.port_min}}
              port_max: {{endpoint.port_max}}
{% endfor %}{# endpoints #}
{% endfor %}{# capabilities #}
{% endfor %}{# nodes #}
{% endfor %}{# components #}
{% endfor %}{# tenants #}
{% endfor %}{# vnfs #}
